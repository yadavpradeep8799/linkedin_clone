{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Js\\\\linkedin-clone\\\\src\\\\pages\\\\ProfilePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setProfile } from '../redux/userSlice'; // Import action to set profile\nimport './ProfilePage.css';\n\n// Import images\nimport defaultProfilePicture from '../assets/pp.jpg'; // Path to profile picture\nimport coverImage from '../assets/logo.png'; // Path to cover image\n\n// Define Profile type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Dummy function to simulate fetching profile data\nconst fetchProfileData = () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        name: 'Pradeep Yadav',\n        title: 'Software Engineer',\n        location: 'Saket, India',\n        profilePicture: defaultProfilePicture,\n        // Use imported image\n        bio: 'Passionate software engineer with 2.6 years of experience.'\n      });\n    }, 1000); // Simulate a 1-second fetch time\n  });\n};\nconst ProfilePage = () => {\n  _s();\n  var _profile$bio;\n  const profile = useSelector(state => state.user.profile);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // Simulate fetching profile data when the component mounts\n    const loadProfile = async () => {\n      dispatch(setProfile({\n        name: '',\n        title: '',\n        location: '',\n        profilePicture: ''\n      })); // Set initial state\n      const profileData = await fetchProfileData();\n      dispatch(setProfile(profileData)); // Update profile data\n    };\n    loadProfile();\n  }, [dispatch]);\n  if (!profile) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No profile available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"profile-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-cover\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: coverImage,\n          alt: \"Cover\",\n          className: \"cover-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profile.profilePicture,\n            alt: profile.name,\n            className: \"profile-picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: profile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile-title\",\n            children: profile.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile-location\",\n            children: profile.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile-bio\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_profile$bio = profile.bio) !== null && _profile$bio !== void 0 ? _profile$bio : 'No bio available'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile-posts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"posts-list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"u/d5h2Nk/3DsAL0c4HQw+L741d8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","setProfile","defaultProfilePicture","coverImage","jsxDEV","_jsxDEV","fetchProfileData","Promise","resolve","setTimeout","name","title","location","profilePicture","bio","ProfilePage","_s","_profile$bio","profile","state","user","dispatch","loadProfile","profileData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","_c","$RefreshReg$"],"sources":["D:/React_Js/linkedin-clone/src/pages/ProfilePage.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\nimport { setProfile } from '../redux/userSlice'; // Import action to set profile\r\nimport './ProfilePage.css';\r\n\r\n// Import images\r\nimport defaultProfilePicture from '../assets/pp.jpg'; // Path to profile picture\r\nimport coverImage from '../assets/logo.png';   // Path to cover image\r\n\r\n// Define Profile type\r\ninterface Profile {\r\n  name: string;\r\n  title: string;\r\n  location: string;\r\n  profilePicture: string;\r\n  bio?: string; // Make bio optional\r\n}\r\n\r\n// Dummy function to simulate fetching profile data\r\nconst fetchProfileData = (): Promise<Profile> => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        name: 'Pradeep Yadav',\r\n        title: 'Software Engineer',\r\n        location: 'Saket, India',\r\n        profilePicture: defaultProfilePicture, // Use imported image\r\n        bio: 'Passionate software engineer with 2.6 years of experience.',\r\n      });\r\n    }, 1000); // Simulate a 1-second fetch time\r\n  });\r\n};\r\n\r\nconst ProfilePage: React.FC = () => {\r\n  const profile = useSelector((state: RootState) => state.user.profile);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // Simulate fetching profile data when the component mounts\r\n    const loadProfile = async () => {\r\n      dispatch(setProfile({ name: '', title: '', location: '', profilePicture: '' })); // Set initial state\r\n      const profileData = await fetchProfileData();\r\n      dispatch(setProfile(profileData)); // Update profile data\r\n    };\r\n\r\n    loadProfile();\r\n  }, [dispatch]);\r\n\r\n  if (!profile) {\r\n    return <div>No profile available.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <header className=\"profile-header\">\r\n        <div className=\"profile-cover\">\r\n          <img src={coverImage} alt=\"Cover\" className=\"cover-image\" />\r\n        </div>\r\n        <div className=\"profile-info\">\r\n          <div className=\"profile-image\">\r\n            <img src={profile.profilePicture} alt={profile.name} className=\"profile-picture\" />\r\n          </div>\r\n          <div className=\"profile-details\">\r\n            <h1>{profile.name}</h1>\r\n            <p className=\"profile-title\">{profile.title}</p>\r\n            <p className=\"profile-location\">{profile.location}</p>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <section className=\"profile-bio\">\r\n        <h2>About</h2>\r\n        <p>{profile.bio ?? 'No bio available'}</p>\r\n      </section>\r\n      <section className=\"profile-posts\">\r\n        <h2>Your Posts</h2>\r\n        <ul className=\"posts-list\">\r\n          {/* Display user posts */}\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}