{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Js\\\\linkedin-clone\\\\src\\\\pages\\\\ProfilePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setProfile, editPost } from '../redux/userSlice';\nimport './ProfilePage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  var _profile$bio;\n  const profile = useSelector(state => state.user.profile);\n  const posts = useSelector(state => state.user.posts);\n  const dispatch = useDispatch();\n  const [editingPostId, setEditingPostId] = useState(null);\n  const [editedPostContent, setEditedPostContent] = useState('');\n  useEffect(() => {\n    // Simulate fetching profile data when the component mounts\n    const loadProfile = async () => {\n      const profileData = {\n        name: 'Pradeep Yadav',\n        title: 'Software Engineer',\n        location: 'Saket, India',\n        profilePicture: 'path/to/profile.jpg',\n        bio: 'Passionate software engineer with 2.6 years of experience.'\n      };\n      dispatch(setProfile(profileData)); // Update profile data\n    };\n    loadProfile();\n  }, [dispatch]);\n  const handleSaveEdit = id => {\n    if (editedPostContent.trim()) {\n      dispatch(editPost({\n        postId: id,\n        content: editedPostContent\n      }));\n      setEditingPostId(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"profile-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-cover\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: 'path/to/cover-image.jpg',\n          alt: \"Cover\",\n          className: \"cover-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: (profile === null || profile === void 0 ? void 0 : profile.profilePicture) || '',\n            alt: (profile === null || profile === void 0 ? void 0 : profile.name) || '',\n            className: \"profile-picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: profile === null || profile === void 0 ? void 0 : profile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile-title\",\n            children: profile === null || profile === void 0 ? void 0 : profile.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile-location\",\n            children: profile === null || profile === void 0 ? void 0 : profile.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile-bio\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_profile$bio = profile === null || profile === void 0 ? void 0 : profile.bio) !== null && _profile$bio !== void 0 ? _profile$bio : 'No bio available'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile-posts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"posts-list\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"post-item\",\n          children: editingPostId === post.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editedPostContent,\n              onChange: e => setEditedPostContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSaveEdit(post.id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: post.image,\n              alt: \"Post\",\n              className: \"post-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditingPostId(post.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [post.likes, \" Likes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [post.comments.length, \" Comments\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"yPIZiP24XM0+/emC4RyDBtYCck0=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","setProfile","editPost","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfilePage","_s","_profile$bio","profile","state","user","posts","dispatch","editingPostId","setEditingPostId","editedPostContent","setEditedPostContent","loadProfile","profileData","name","title","location","profilePicture","bio","handleSaveEdit","id","trim","postId","content","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","post","value","onChange","e","target","onClick","image","likes","comments","length","_c","$RefreshReg$"],"sources":["D:/React_Js/linkedin-clone/src/pages/ProfilePage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\nimport { setProfile, editPost } from '../redux/userSlice';\r\nimport './ProfilePage.css';\r\n\r\ninterface Post {\r\n  id: number;\r\n  content: string;\r\n  image?: string;\r\n  likes: number;\r\n  comments: Comment[];\r\n}\r\n\r\ninterface Comment {\r\n  id: number;\r\n  content: string;\r\n}\r\n\r\ninterface Profile {\r\n  name: string;\r\n  title: string;\r\n  location: string;\r\n  profilePicture: string;\r\n  bio?: string;\r\n}\r\n\r\nconst ProfilePage: React.FC = () => {\r\n  const profile = useSelector((state: RootState) => state.user.profile);\r\n  const posts = useSelector((state: RootState) => state.user.posts);\r\n  const dispatch = useDispatch();\r\n\r\n  const [editingPostId, setEditingPostId] = useState<number | null>(null);\r\n  const [editedPostContent, setEditedPostContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Simulate fetching profile data when the component mounts\r\n    const loadProfile = async () => {\r\n      const profileData: Profile = {\r\n        name: 'Pradeep Yadav',\r\n        title: 'Software Engineer',\r\n        location: 'Saket, India',\r\n        profilePicture: 'path/to/profile.jpg',\r\n        bio: 'Passionate software engineer with 2.6 years of experience.',\r\n      };\r\n      dispatch(setProfile(profileData)); // Update profile data\r\n    };\r\n\r\n    loadProfile();\r\n  }, [dispatch]);\r\n\r\n  const handleSaveEdit = (id: number) => {\r\n    if (editedPostContent.trim()) {\r\n      dispatch(editPost({ postId: id, content: editedPostContent }));\r\n      setEditingPostId(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <header className=\"profile-header\">\r\n        <div className=\"profile-cover\">\r\n          <img src={'path/to/cover-image.jpg'} alt=\"Cover\" className=\"cover-image\" />\r\n        </div>\r\n        <div className=\"profile-info\">\r\n          <div className=\"profile-image\">\r\n            <img src={profile?.profilePicture || ''} alt={profile?.name || ''} className=\"profile-picture\" />\r\n          </div>\r\n          <div className=\"profile-details\">\r\n            <h1>{profile?.name}</h1>\r\n            <p className=\"profile-title\">{profile?.title}</p>\r\n            <p className=\"profile-location\">{profile?.location}</p>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <section className=\"profile-bio\">\r\n        <h2>About</h2>\r\n        <p>{profile?.bio ?? 'No bio available'}</p>\r\n      </section>\r\n      <section className=\"profile-posts\">\r\n        <h2>Your Posts</h2>\r\n        <ul className=\"posts-list\">\r\n          {posts.map((post: Post) => (\r\n            <li key={post.id} className=\"post-item\">\r\n              {editingPostId === post.id ? (\r\n                <>\r\n                  <textarea\r\n                    value={editedPostContent}\r\n                    onChange={(e) => setEditedPostContent(e.target.value)}\r\n                  />\r\n                  <button onClick={() => handleSaveEdit(post.id)}>Save</button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <p>{post.content}</p>\r\n                  {post.image && <img src={post.image} alt=\"Post\" className=\"post-image\" />}\r\n                  <button onClick={() => setEditingPostId(post.id)}>Edit</button>\r\n                  <p>{post.likes} Likes</p>\r\n                  <p>{post.comments.length} Comments</p>\r\n                </>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}