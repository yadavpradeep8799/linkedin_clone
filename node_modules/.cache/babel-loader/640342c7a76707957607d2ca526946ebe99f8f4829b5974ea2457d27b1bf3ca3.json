{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  profile: null\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setProfile(state, action) {\n      state.profile = action.payload;\n    },\n    // Add a login reducer if necessary\n    login(state, action) {\n      state.profile = action.payload;\n    }\n    // Other reducers if any\n  }\n});\nexport const {\n  setProfile,\n  login\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","profile","userSlice","name","reducers","setProfile","state","action","payload","login","actions","reducer"],"sources":["D:/React_Js/linkedin-clone/src/redux/userSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface Profile {\r\n  name: string;\r\n  title: string;\r\n  location: string;\r\n  profilePicture: string;\r\n  bio?: string; // Make bio optional\r\n}\r\n\r\ninterface UserState {\r\n  profile: Profile | null;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  profile: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setProfile(state, action: PayloadAction<Profile>) {\r\n      state.profile = action.payload;\r\n    },\r\n    // Add a login reducer if necessary\r\n    login(state, action: PayloadAction<Profile>) {\r\n      state.profile = action.payload;\r\n    },\r\n    // Other reducers if any\r\n  },\r\n});\r\n\r\nexport const { setProfile, login } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAc7D,MAAMC,YAAuB,GAAG;EAC9BC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRC,UAAUA,CAACC,KAAK,EAAEC,MAA8B,EAAE;MAChDD,KAAK,CAACL,OAAO,GAAGM,MAAM,CAACC,OAAO;IAChC,CAAC;IACD;IACAC,KAAKA,CAACH,KAAK,EAAEC,MAA8B,EAAE;MAC3CD,KAAK,CAACL,OAAO,GAAGM,MAAM,CAACC,OAAO;IAChC;IACA;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,UAAU;EAAEI;AAAM,CAAC,GAAGP,SAAS,CAACQ,OAAO;AACtD,eAAeR,SAAS,CAACS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}