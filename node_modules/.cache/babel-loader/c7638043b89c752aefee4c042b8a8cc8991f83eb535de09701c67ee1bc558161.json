{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Js\\\\linkedin-clone\\\\src\\\\pages\\\\FeedPage.tsx\",\n  _s = $RefreshSig$();\n// src/pages/FeedPage.tsx\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { likePost, addComment } from '../redux/postsSlice';\nimport './FeedPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedPage = () => {\n  _s();\n  const posts = useSelector(state => state.posts.posts);\n  const dispatch = useDispatch();\n  const handleLike = id => {\n    dispatch(likePost(id));\n  };\n  const handleComment = (id, comment) => {\n    dispatch(addComment({\n      postId: id,\n      comment\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-content\",\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLike(post.id),\n          className: \"like-button\",\n          children: [\"Like (\", post.likes, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add a comment...\",\n            className: \"comment-input\",\n            onKeyDown: e => {\n              if (e.key === 'Enter') {\n                handleComment(post.id, e.target.value);\n                e.target.value = '';\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"comments-list\",\n            children: post.comments.map((comment, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"comment-item\",\n              children: comment\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedPage, \"HXzQMnLC9I4Qe3TIc0YCb+cBYy8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = FeedPage;\nexport default FeedPage;\nvar _c;\n$RefreshReg$(_c, \"FeedPage\");","map":{"version":3,"names":["React","useSelector","useDispatch","likePost","addComment","jsxDEV","_jsxDEV","FeedPage","_s","posts","state","dispatch","handleLike","id","handleComment","comment","postId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","content","onClick","likes","type","placeholder","onKeyDown","e","key","target","value","comments","idx","_c","$RefreshReg$"],"sources":["D:/React_Js/linkedin-clone/src/pages/FeedPage.tsx"],"sourcesContent":["// src/pages/FeedPage.tsx\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\nimport { likePost, addComment } from '../redux/postsSlice';\r\nimport './FeedPage.css';\r\n\r\nconst FeedPage: React.FC = () => {\r\n  const posts = useSelector((state: RootState) => state.posts.posts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLike = (id: number) => {\r\n    dispatch(likePost(id));\r\n  };\r\n\r\n  const handleComment = (id: number, comment: string) => {\r\n    dispatch(addComment({ postId: id, comment }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"feed-container\">\r\n      <h1>Feed</h1>\r\n      {posts.length === 0 ? (\r\n        <p>No posts available.</p>\r\n      ) : (\r\n        posts.map((post) => (\r\n          <div key={post.id} className=\"post\">\r\n            <p className=\"post-content\">{post.content}</p>\r\n            <div className=\"post-actions\">\r\n              <button onClick={() => handleLike(post.id)} className=\"like-button\">\r\n                Like ({post.likes})\r\n              </button>\r\n              <div className=\"comments-section\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Add a comment...\"\r\n                  className=\"comment-input\"\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                      handleComment(post.id, (e.target as HTMLInputElement).value);\r\n                      (e.target as HTMLInputElement).value = '';\r\n                    }\r\n                  }}\r\n                />\r\n                <ul className=\"comments-list\">\r\n                  {post.comments.map((comment, idx) => (\r\n                    <li key={idx} className=\"comment-item\">{comment}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}