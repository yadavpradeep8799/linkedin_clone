{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Js\\\\linkedin-clone\\\\src\\\\pages\\\\ProfilePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setProfile } from '../redux/userSlice'; // Import action to set profile\nimport './ProfilePage.css';\n\n// Import images\nimport defaultProfilePicture from '../assets/pp.jpg'; // Path to profile picture\nimport coverImage from '../assets/logo.png'; // Path to cover image\n\n// Define Profile type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Dummy function to simulate fetching profile data\nconst fetchProfileData = () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        name: 'Pradeep Yadav',\n        title: 'Software Engineer',\n        location: 'Saket, India',\n        profilePicture: defaultProfilePicture,\n        // Use imported image\n        bio: 'Passionate software engineer with 2.6 years of experience.'\n      });\n    }, 1000); // Simulate a 1-second fetch time\n  });\n};\nconst ProfilePage = () => {\n  _s();\n  var _profile$bio;\n  const profile = useSelector(state => state.user.profile);\n  const posts = useSelector(state => state.posts.posts); // Fetch posts from the Redux store\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // Simulate fetching profile data when the component mounts\n    const loadProfile = async () => {\n      dispatch(setProfile({\n        name: '',\n        title: '',\n        location: '',\n        profilePicture: ''\n      })); // Set initial state\n      const profileData = await fetchProfileData();\n      dispatch(setProfile(profileData)); // Update profile data\n    };\n    loadProfile();\n  }, [dispatch]);\n  if (!profile) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No profile available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"profile-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-cover\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: coverImage,\n          alt: \"Cover\",\n          className: \"cover-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profile.profilePicture,\n            alt: profile.name,\n            className: \"profile-picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: profile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile-title\",\n            children: profile.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile-location\",\n            children: profile.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile-bio\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_profile$bio = profile.bio) !== null && _profile$bio !== void 0 ? _profile$bio : 'No bio available'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile-posts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"posts-list\",\n        children: posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No posts to display.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"post-item\",\n          children: [post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.image,\n            alt: \"Post visual\",\n            className: \"post-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"post-tags\",\n              children: post.tags\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"post-likes\",\n              children: [\"Likes: \", post.likes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-comments\",\n            children: post.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"comment\",\n              children: comment\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"yfadTds7yKmMfnuwPWpCpeJpUQg=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","setProfile","defaultProfilePicture","coverImage","jsxDEV","_jsxDEV","fetchProfileData","Promise","resolve","setTimeout","name","title","location","profilePicture","bio","ProfilePage","_s","_profile$bio","profile","state","user","posts","dispatch","loadProfile","profileData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","length","map","post","image","content","tags","likes","comments","comment","index","id","_c","$RefreshReg$"],"sources":["D:/React_Js/linkedin-clone/src/pages/ProfilePage.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\nimport { setProfile } from '../redux/userSlice'; // Import action to set profile\r\nimport './ProfilePage.css';\r\n\r\n// Import images\r\nimport defaultProfilePicture from '../assets/pp.jpg'; // Path to profile picture\r\nimport coverImage from '../assets/logo.png';   // Path to cover image\r\n\r\n// Define Profile type\r\ninterface Profile {\r\n  name: string;\r\n  title: string;\r\n  location: string;\r\n  profilePicture: string;\r\n  bio?: string; // Make bio optional\r\n}\r\n\r\n// Dummy function to simulate fetching profile data\r\nconst fetchProfileData = (): Promise<Profile> => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        name: 'Pradeep Yadav',\r\n        title: 'Software Engineer',\r\n        location: 'Saket, India',\r\n        profilePicture: defaultProfilePicture, // Use imported image\r\n        bio: 'Passionate software engineer with 2.6 years of experience.',\r\n      });\r\n    }, 1000); // Simulate a 1-second fetch time\r\n  });\r\n};\r\n\r\nconst ProfilePage: React.FC = () => {\r\n  const profile = useSelector((state: RootState) => state.user.profile);\r\n  const posts = useSelector((state: RootState) => state.posts.posts); // Fetch posts from the Redux store\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // Simulate fetching profile data when the component mounts\r\n    const loadProfile = async () => {\r\n      dispatch(setProfile({ name: '', title: '', location: '', profilePicture: '' })); // Set initial state\r\n      const profileData = await fetchProfileData();\r\n      dispatch(setProfile(profileData)); // Update profile data\r\n    };\r\n\r\n    loadProfile();\r\n  }, [dispatch]);\r\n\r\n  if (!profile) {\r\n    return <div>No profile available.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <header className=\"profile-header\">\r\n        <div className=\"profile-cover\">\r\n          <img src={coverImage} alt=\"Cover\" className=\"cover-image\" />\r\n        </div>\r\n        <div className=\"profile-info\">\r\n          <div className=\"profile-image\">\r\n            <img src={profile.profilePicture} alt={profile.name} className=\"profile-picture\" />\r\n          </div>\r\n          <div className=\"profile-details\">\r\n            <h1>{profile.name}</h1>\r\n            <p className=\"profile-title\">{profile.title}</p>\r\n            <p className=\"profile-location\">{profile.location}</p>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <section className=\"profile-bio\">\r\n        <h2>About</h2>\r\n        <p>{profile.bio ?? 'No bio available'}</p>\r\n      </section>\r\n      \r\n      {/* Your Posts Section */}\r\n      <section className=\"profile-posts\">\r\n        <h2>Your Posts</h2>\r\n        <ul className=\"posts-list\">\r\n          {posts.length === 0 ? (\r\n            <li>No posts to display.</li>\r\n          ) : (\r\n            posts.map((post) => (\r\n              <li key={post.id} className=\"post-item\">\r\n                {post.image && <img src={post.image} alt=\"Post visual\" className=\"post-image\" />}\r\n                <p>{post.content}</p>\r\n                <div className=\"post-meta\">\r\n                  <span className=\"post-tags\">{post.tags}</span>\r\n                  <span className=\"post-likes\">Likes: {post.likes}</span>\r\n                </div>\r\n                <div className=\"post-comments\">\r\n                  {post.comments.map((comment, index) => (\r\n                    <p key={index} className=\"comment\">{comment}</p>\r\n                  ))}\r\n                </div>\r\n              </li>\r\n            ))\r\n          )}\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,UAAU,QAAQ,oBAAoB,CAAC,CAAC;AACjD,OAAO,mBAAmB;;AAE1B;AACA,OAAOC,qBAAqB,MAAM,kBAAkB,CAAC,CAAC;AACtD,OAAOC,UAAU,MAAM,oBAAoB,CAAC,CAAG;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASA;AACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAwB;EAC/C,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9BC,UAAU,CAAC,MAAM;MACfD,OAAO,CAAC;QACNE,IAAI,EAAE,eAAe;QACrBC,KAAK,EAAE,mBAAmB;QAC1BC,QAAQ,EAAE,cAAc;QACxBC,cAAc,EAAEX,qBAAqB;QAAE;QACvCY,GAAG,EAAE;MACP,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,YAAA;EAClC,MAAMC,OAAO,GAAGnB,WAAW,CAAEoB,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,OAAO,CAAC;EACrE,MAAMG,KAAK,GAAGtB,WAAW,CAAEoB,KAAgB,IAAKA,KAAK,CAACE,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;EACpE,MAAMC,QAAQ,GAAGtB,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd;IACA,MAAMyB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BD,QAAQ,CAACrB,UAAU,CAAC;QAAES,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,cAAc,EAAE;MAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACjF,MAAMW,WAAW,GAAG,MAAMlB,gBAAgB,CAAC,CAAC;MAC5CgB,QAAQ,CAACrB,UAAU,CAACuB,WAAW,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC;IAEDD,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,IAAI,CAACJ,OAAO,EAAE;IACZ,oBAAOb,OAAA;MAAAoB,QAAA,EAAK;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACzC;EAEA,oBACExB,OAAA;IAAKyB,SAAS,EAAC,mBAAmB;IAAAL,QAAA,gBAChCpB,OAAA;MAAQyB,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAChCpB,OAAA;QAAKyB,SAAS,EAAC,eAAe;QAAAL,QAAA,eAC5BpB,OAAA;UAAK0B,GAAG,EAAE5B,UAAW;UAAC6B,GAAG,EAAC,OAAO;UAACF,SAAS,EAAC;QAAa;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eACNxB,OAAA;QAAKyB,SAAS,EAAC,cAAc;QAAAL,QAAA,gBAC3BpB,OAAA;UAAKyB,SAAS,EAAC,eAAe;UAAAL,QAAA,eAC5BpB,OAAA;YAAK0B,GAAG,EAAEb,OAAO,CAACL,cAAe;YAACmB,GAAG,EAAEd,OAAO,CAACR,IAAK;YAACoB,SAAS,EAAC;UAAiB;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChF,CAAC,eACNxB,OAAA;UAAKyB,SAAS,EAAC,iBAAiB;UAAAL,QAAA,gBAC9BpB,OAAA;YAAAoB,QAAA,EAAKP,OAAO,CAACR;UAAI;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvBxB,OAAA;YAAGyB,SAAS,EAAC,eAAe;YAAAL,QAAA,EAAEP,OAAO,CAACP;UAAK;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChDxB,OAAA;YAAGyB,SAAS,EAAC,kBAAkB;YAAAL,QAAA,EAAEP,OAAO,CAACN;UAAQ;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACTxB,OAAA;MAASyB,SAAS,EAAC,aAAa;MAAAL,QAAA,gBAC9BpB,OAAA;QAAAoB,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdxB,OAAA;QAAAoB,QAAA,GAAAR,YAAA,GAAIC,OAAO,CAACJ,GAAG,cAAAG,YAAA,cAAAA,YAAA,GAAI;MAAkB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAGVxB,OAAA;MAASyB,SAAS,EAAC,eAAe;MAAAL,QAAA,gBAChCpB,OAAA;QAAAoB,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBxB,OAAA;QAAIyB,SAAS,EAAC,YAAY;QAAAL,QAAA,EACvBJ,KAAK,CAACY,MAAM,KAAK,CAAC,gBACjB5B,OAAA;UAAAoB,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,GAE7BR,KAAK,CAACa,GAAG,CAAEC,IAAI,iBACb9B,OAAA;UAAkByB,SAAS,EAAC,WAAW;UAAAL,QAAA,GACpCU,IAAI,CAACC,KAAK,iBAAI/B,OAAA;YAAK0B,GAAG,EAAEI,IAAI,CAACC,KAAM;YAACJ,GAAG,EAAC,aAAa;YAACF,SAAS,EAAC;UAAY;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAChFxB,OAAA;YAAAoB,QAAA,EAAIU,IAAI,CAACE;UAAO;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBxB,OAAA;YAAKyB,SAAS,EAAC,WAAW;YAAAL,QAAA,gBACxBpB,OAAA;cAAMyB,SAAS,EAAC,WAAW;cAAAL,QAAA,EAAEU,IAAI,CAACG;YAAI;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC9CxB,OAAA;cAAMyB,SAAS,EAAC,YAAY;cAAAL,QAAA,GAAC,SAAO,EAACU,IAAI,CAACI,KAAK;YAAA;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpD,CAAC,eACNxB,OAAA;YAAKyB,SAAS,EAAC,eAAe;YAAAL,QAAA,EAC3BU,IAAI,CAACK,QAAQ,CAACN,GAAG,CAAC,CAACO,OAAO,EAAEC,KAAK,kBAChCrC,OAAA;cAAeyB,SAAS,EAAC,SAAS;cAAAL,QAAA,EAAEgB;YAAO,GAAnCC,KAAK;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAkC,CAChD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,GAXCM,IAAI,CAACQ,EAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYZ,CACL;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACb,EAAA,CArEID,WAAqB;EAAA,QACThB,WAAW,EACbA,WAAW,EACRC,WAAW;AAAA;AAAA4C,EAAA,GAHxB7B,WAAqB;AAuE3B,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}